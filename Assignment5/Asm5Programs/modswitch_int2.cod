; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\bewew\Desktop\c\Assignment5\Asm5Programs\modswitch_int2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_main
; Function compile flags: /Odtp
; File c:\users\bewew\desktop\c\assignment5\asm5programs\modswitch_int2.c
_TEXT	SEGMENT
_x$ = -12						; size = 4
tv64 = -8						; size = 4
_i$ = -4						; size = 4
_main	PROC

; 1    : void main() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 2    :   int x = 4;

  00006	c7 45 f4 04 00
	00 00		 mov	 DWORD PTR _x$[ebp], 4

; 3    :   int i;
; 4    : 
; 5    :   switch (x) {

  0000d	8b 45 f4	 mov	 eax, DWORD PTR _x$[ebp]
  00010	89 45 f8	 mov	 DWORD PTR tv64[ebp], eax
  00013	8b 4d f8	 mov	 ecx, DWORD PTR tv64[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	89 4d f8	 mov	 DWORD PTR tv64[ebp], ecx
  0001c	83 7d f8 16	 cmp	 DWORD PTR tv64[ebp], 22	; 00000016H
  00020	77 3d		 ja	 SHORT $LN8@main
  00022	8b 55 f8	 mov	 edx, DWORD PTR tv64[ebp]
  00025	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN10@main[edx]
  0002c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@main[eax*4]
$LN4@main:

; 6    :    case 10:
; 7    :      i += 10;

  00033	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00039	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx

; 8    :      break;

  0003c	eb 2a		 jmp	 SHORT $LN1@main
$LN5@main:

; 9    :    case 18:
; 10   :      i += 18;

  0003e	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00041	83 c2 12	 add	 edx, 18			; 00000012H
  00044	89 55 fc	 mov	 DWORD PTR _i$[ebp], edx

; 11   :      break;

  00047	eb 1f		 jmp	 SHORT $LN1@main
$LN6@main:

; 12   :    case 3:
; 13   :      i += 3;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0004c	83 c0 03	 add	 eax, 3
  0004f	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 14   :      break;

  00052	eb 14		 jmp	 SHORT $LN1@main
$LN7@main:

; 15   :    case -4:
; 16   :      i -= 4;

  00054	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00057	83 e9 04	 sub	 ecx, 4
  0005a	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx

; 17   :      break;

  0005d	eb 09		 jmp	 SHORT $LN1@main
$LN8@main:

; 18   :    default:
; 19   :      i += 1;

  0005f	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00062	83 c2 01	 add	 edx, 1
  00065	89 55 fc	 mov	 DWORD PTR _i$[ebp], edx
$LN1@main:

; 20   :   }
; 21   : }

  00068	33 c0		 xor	 eax, eax
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
  0006e	66 90		 npad	 2
$LN11@main:
  00070	00 00 00 00	 DD	 $LN7@main
  00074	00 00 00 00	 DD	 $LN6@main
  00078	00 00 00 00	 DD	 $LN4@main
  0007c	00 00 00 00	 DD	 $LN5@main
  00080	00 00 00 00	 DD	 $LN8@main
$LN10@main:
  00084	00		 DB	 0
  00085	04		 DB	 4
  00086	04		 DB	 4
  00087	04		 DB	 4
  00088	04		 DB	 4
  00089	04		 DB	 4
  0008a	04		 DB	 4
  0008b	01		 DB	 1
  0008c	04		 DB	 4
  0008d	04		 DB	 4
  0008e	04		 DB	 4
  0008f	04		 DB	 4
  00090	04		 DB	 4
  00091	04		 DB	 4
  00092	02		 DB	 2
  00093	04		 DB	 4
  00094	04		 DB	 4
  00095	04		 DB	 4
  00096	04		 DB	 4
  00097	04		 DB	 4
  00098	04		 DB	 4
  00099	04		 DB	 4
  0009a	03		 DB	 3
_main	ENDP
_TEXT	ENDS
END
