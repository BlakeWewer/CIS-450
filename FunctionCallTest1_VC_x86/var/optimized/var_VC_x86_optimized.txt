////////////////////////////////////////////////////////////////////////////
//      var.c program to test memory allocation in C
//         M. Mizuno (c) 1995, 2004, 2005
//          modified for Learning Tree course 223P
//
// to compile var.c on Pentium,
// 1. execute Visual Studio .NET 2003 Command Prompt
// 2. go to the directory which contains var.c
// 3. issue cl /Od /FAcs var.c
//        /Od: disable optimization
//        /FAcs: generate a listing file with source code and machine code
///////////////////////////////////////////////////////////////////////////
long test(unsigned int ui, int i, short s, unsigned short us,
	char c, unsigned char uc, long l, unsigned long ul,
	int x, short y); 

char ret;
int x=100;
static int si;
static int sj = 23;

int main(int argc, char **argv, char **envp)
{
	unsigned char uc;
	static short y = 99;
	short s;
	char c;
	unsigned short us;
	static int i;
	unsigned int ui;
	long l;
	unsigned long ul;

	if (i < 0) {
		ui = us + s - c;
	}
	else {
		ul = si - sj * 2;
	}

	while (sj > 0) {
		uc = y - 3;
		sj++;
	}

	ret = test(ui, i, s, us, c, uc, l, ul, x,  y);

	return 0;
}

long test(unsigned int ui, int i, short s, unsigned short us,
	char c, unsigned char uc, long l, unsigned long ul,
	int x, short y)
{
	char c1;
	int i1;
	char c2;

	ui = 1;
 	i = 2;
	s = 3;
	us = 4;
	c = 5;
	uc = 6;
	l = 7;
	ul = 8;
	x = 9;
	y = 10;
	c1 = 11;
	c2 = 12;
	i1 = 13;
	return ui * 2 + l;
}

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	c:\LearningTree\223P\Programs\memory_test\Pentium\optimize\var.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_x
_DATA	SEGMENT
COMM	_ret:BYTE
_DATA	ENDS
_DATA	SEGMENT
_x	DD	064H
_sj	DD	017H
?y@?1??main@@9@9 DW 063H				; `main'::`2'::y
_DATA	ENDS
PUBLIC	_main
PUBLIC	_test
; Function compile flags: /Ogtpy
; File c:\learningtree\223p\programs\memory_test\pentium\optimize\var.c
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_i$ = 12						; size = 4
_s$ = 16						; size = 2
_us$ = 20						; size = 2
_c$ = 24						; size = 1
_uc$ = 28						; size = 1
_l$ = 32						; size = 4
_ul$ = 36						; size = 4
_x$ = 40						; size = 4
_y$ = 44						; size = 2
_test	PROC

; 55   : 	char c1;
; 56   : 	int i1;
; 57   : 	char c2;
; 58   : 
; 59   : 	ui = 1;
; 60   :  	i = 2;
; 61   : 	s = 3;
; 62   : 	us = 4;
; 63   : 	c = 5;
; 64   : 	uc = 6;
; 65   : 	l = 7;
; 66   : 	ul = 8;
; 67   : 	x = 9;
; 68   : 	y = 10;
; 69   : 	c1 = 11;
; 70   : 	c2 = 12;
; 71   : 	i1 = 13;
; 72   : 	return ui * 2 + l;

  00000	b8 09 00 00 00	 mov	 eax, 9

; 73   : }

  00005	c3		 ret	 0
_test	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\learningtree\223p\programs\memory_test\pentium\optimize\var.c
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_envp$ = 16						; size = 4
_main	PROC

; 24   : 	unsigned char uc;
; 25   : 	static short y = 99;
; 26   : 	short s;
; 27   : 	char c;
; 28   : 	unsigned short us;
; 29   : 	static int i;
; 30   : 	unsigned int ui;
; 31   : 	long l;
; 32   : 	unsigned long ul;
; 33   : 
; 34   : 	if (i < 0) {
; 35   : 		ui = us + s - c;
; 36   : 	}
; 37   : 	else {
; 38   : 		ul = si - sj * 2;
; 39   : 	}
; 40   : 
; 41   : 	while (sj > 0) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR _sj
  00005	85 c0		 test	 eax, eax
  00007	7e 11		 jle	 SHORT $LN13@main
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL2@main:

; 42   : 		uc = y - 3;
; 43   : 		sj++;

  00010	40		 inc	 eax
  00011	85 c0		 test	 eax, eax
  00013	7f fb		 jg	 SHORT $LL2@main
  00015	a3 00 00 00 00	 mov	 DWORD PTR _sj, eax
$LN13@main:

; 44   : 	}
; 45   : 
; 46   : 	ret = test(ui, i, s, us, c, uc, l, ul, x,  y);
; 47   : 
; 48   : 	return 0;

  0001a	33 c0		 xor	 eax, eax
  0001c	c6 05 00 00 00
	00 09		 mov	 BYTE PTR _ret, 9

; 49   : }

  00023	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
