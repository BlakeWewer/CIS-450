; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25834.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	ans:DWORD
_DATA	ENDS
_DATA	SEGMENT
$SG7080	DB	'asnswer = %d', 0aH, 00H
_DATA	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	fact
PUBLIC	main
EXTRN	__acrt_iob_func:PROC
EXTRN	__stdio_common_vfprintf:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$fact DD	imagerel $LN6
	DD	imagerel $LN6+77
	DD	imagerel $unwind$fact
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$fact DD	010801H
	DD	06208H
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\memorytest\vc_x86_64\fact.c
_TEXT	SEGMENT
main	PROC

; 25   :    {

$LN3:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 26   :         fact(3);

  00004	b9 03 00 00 00	 mov	 ecx, 3
  00009	e8 00 00 00 00	 call	 fact

; 27   : 	printf("asnswer = %d\n", ans);

  0000e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ans
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG7080
  0001b	e8 00 00 00 00	 call	 printf

; 28   : 	return 0;

  00020	33 c0		 xor	 eax, eax

; 29   :    }

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\memorytest\vc_x86_64\fact.c
_TEXT	SEGMENT
x$ = 32
i$ = 64
fact	PROC

; 12   :    {

$LN6:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 13   :         /* what will happen if x is declared as internal static */
; 14   :         int x;
; 15   : 
; 16   :         x = i - 1;

  00008	8b 44 24 40	 mov	 eax, DWORD PTR i$[rsp]
  0000c	ff c8		 dec	 eax
  0000e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 17   :         if  ((i == 0) || (x == 0)) ans = 1;

  00012	83 7c 24 40 00	 cmp	 DWORD PTR i$[rsp], 0
  00017	74 07		 je	 SHORT $LN4@fact
  00019	83 7c 24 20 00	 cmp	 DWORD PTR x$[rsp], 0
  0001e	75 0c		 jne	 SHORT $LN2@fact
$LN4@fact:
  00020	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ans, 1
  0002a	eb 1c		 jmp	 SHORT $LN3@fact
$LN2@fact:

; 18   :         else {
; 19   :           fact(x);

  0002c	8b 4c 24 20	 mov	 ecx, DWORD PTR x$[rsp]
  00030	e8 00 00 00 00	 call	 fact

; 20   :           ans = (x + 1) * ans;

  00035	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00039	ff c0		 inc	 eax
  0003b	0f af 05 00 00
	00 00		 imul	 eax, DWORD PTR ans
  00042	89 05 00 00 00
	00		 mov	 DWORD PTR ans, eax
$LN3@fact:

; 21   : 		}
; 22   :    }

  00048	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004c	c3		 ret	 0
fact	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT

; 952  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 953  :         int _Result;
; 954  :         va_list _ArgList;
; 955  :         __crt_va_start(_ArgList, _Format);

  00018	48 8d 44 24 48	 lea	 rax, QWORD PTR _Format$[rsp+8]
  0001d	48 89 44 24 28	 mov	 QWORD PTR _ArgList$[rsp], rax

; 956  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00022	b9 01 00 00 00	 mov	 ecx, 1
  00027	e8 00 00 00 00	 call	 __acrt_iob_func
  0002c	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00031	45 33 c0	 xor	 r8d, r8d
  00034	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Format$[rsp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 _vfprintf_l
  00041	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 957  :         __crt_va_end(_ArgList);

  00045	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 958  :         return _Result;

  0004e	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 959  :     }

  00052	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00056	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 640  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 641  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00022	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00027	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  0002c	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00031	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  00036	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00039	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 642  :     }

  0003e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00042	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :         static unsigned __int64 _OptionsStorage;
; 87   :         return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 88   :     }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
