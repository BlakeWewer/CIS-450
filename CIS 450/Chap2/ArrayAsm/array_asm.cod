; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	c:\223P_CourseLoad\MMPrograms\Chap3\array_asm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_a:DWORD:0aH
$SG2641	DB	'%d', 00H
	ORG $+1
$SG2642	DB	'%d', 00H
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_printf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
; File c:\223p_courseload\mmprograms\chap3\array_asm.c
_TEXT	SEGMENT
_b$ = -48						; size = 40
__$ArrayPad$ = -8					; size = 4
_i$ = -4						; size = 4
_main	PROC

; 5    : void main (void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6    :   int b[10];
; 7    : 
; 8    :   int i;
; 9    : 
; 10   :   printf("%d", a[i]);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00013	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _a[eax*4]
  0001a	51		 push	 ecx
  0001b	68 00 00 00 00	 push	 OFFSET $SG2641
  00020	e8 00 00 00 00	 call	 _printf
  00025	83 c4 08	 add	 esp, 8

; 11   : 
; 12   :   printf("%d", b[i]);

  00028	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  0002b	8b 44 95 d0	 mov	 eax, DWORD PTR _b$[ebp+edx*4]
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET $SG2642
  00035	e8 00 00 00 00	 call	 _printf
  0003a	83 c4 08	 add	 esp, 8

; 13   : }

  0003d	33 c0		 xor	 eax, eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
